{"version":3,"sources":["components/Card.js","components/ImageSearch.js","App.js","index.js"],"names":["Card","image","className","src","webformatURL","alt","style","fontSize","user","views","downloads","likes","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","type","placeholder","aria-label","onChange","target","value","require","config","App","setImages","isLoading","setIsloading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","map","key","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAgCeA,G,MA7BK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,SACb,yBAAKC,IAAKF,EAAMG,aAAcC,IAAI,SAEpC,yBAAKH,UAAU,WACb,wBAAIA,UAAU,SAASI,MAAO,CAAEC,SAAU,SAA1C,YACYN,EAAMO,MAElB,wBAAIN,UAAU,eACZ,4BACE,4CACCD,EAAMQ,OAET,4BACE,gDACCR,EAAMS,WAET,4BACE,6CACCT,EAAMU,QAGX,yCCCOC,EA1BK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAOtC,OACE,yBAAKd,UAAU,aACb,0BAAMe,SANO,SAACC,GAChBA,EAAEC,iBACFN,EAAWE,KAKP,2BACEb,UAAU,WACVkB,KAAK,OACLC,YAAY,UACZC,aAAW,SACXC,SAAU,SAACL,GAAD,OAAOF,EAAQE,EAAEM,OAAOC,UACjC,IACF,MACD,4BAAQL,KAAK,SAASlB,UAAU,WAAhC,aCjBRwB,EAAQ,IAAUC,SAEX,IAqCQC,EArCI,WAAO,IAAD,EACId,mBAAS,IADb,mBAChBb,EADgB,KACT4B,EADS,OAEWf,oBAAS,GAFpB,mBAEhBgB,EAFgB,KAELC,EAFK,OAGCjB,mBAAS,IAHV,mBAGhBkB,EAHgB,KAGVC,EAHU,KAevB,OAXAC,qBAAU,WACRC,MAAM,gCAAD,OAC6BC,qCAD7B,cACoEJ,EADpE,kCAGFK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACX,IAEF,oCACE,kBAAC,EAAD,CACEnB,WAAY,SAACE,GACXkB,EAAQlB,OAGVe,GAA8B,IAAjB7B,EAAM6C,QACnB,yBAAK5C,UAAU,WAAf,qBAED4B,EACC,wBAAI5B,UAAU,WAAd,cAEA,yBAAKA,UAAU,cACZD,EAAM8C,KAAI,SAAC9C,GAAD,OACT,kBAAC,EAAD,CAAM+C,IAAK/C,EAAMgD,GAAIhD,MAAOA,UC9BxCiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2d8eb756.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nexport const Card = ({ image }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"image\">\n        <img src={image.webformatURL} alt=\"img\" />\n      </div>\n      <div className=\"details\">\n        <li className=\"Author\" style={{ fontSize: \"20px\" }}>\n          Photo By {image.user}\n        </li>\n        <ul className=\"listDetails\">\n          <li>\n            <strong> View : </strong>\n            {image.views}\n          </li>\n          <li>\n            <strong> Downlaod : </strong>\n            {image.downloads}\n          </li>\n          <li>\n            <strong> Likes : </strong>\n            {image.likes}\n          </li>\n        </ul>\n        <strong> </strong>\n      </div>\n    </div>\n  );\n};\nexport default Card;\n","import React, { useState } from \"react\";\n\nconst ImageSearch = ({ searchText }) => {\n  const [text, setText] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    searchText(text);\n  };\n  return (\n    <div className=\"SearchBar\">\n      <form onSubmit={onSubmit}>\n        <input\n          className=\"Inputbtn\"\n          type=\"text\"\n          placeholder=\"type...\"\n          aria-label=\"Search\"\n          onChange={(e) => setText(e.target.value)}\n        />{\" \"}\n        {\"   \"}\n        <button type=\"submit\" className=\"mr-auto\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ImageSearch;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport ImageSearch from \"./components/ImageSearch\";\nrequire(\"dotenv\").config();\n\nexport const App = () => {\n  const [image, setImages] = useState([]);\n  const [isLoading, setIsloading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n  useEffect(() => {\n    fetch(\n      `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API}&q=${term}&image_type=photo&pretty=true`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setImages(data.hits);\n        setIsloading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [term]);\n  return (\n    <>\n      <ImageSearch\n        searchText={(text) => {\n          setTerm(text);\n        }}\n      />\n      {!isLoading && image.length === 0 && (\n        <div className=\"loading\">No Images Loading</div>\n      )}\n      {isLoading ? (\n        <h1 className=\"loading\">Loading...</h1>\n      ) : (\n        <div className=\"container \">\n          {image.map((image) => (\n            <Card key={image.id} image={image} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}